/*
API

API for traces

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SendEventRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendEventRequest{}

// SendEventRequest struct for SendEventRequest
type SendEventRequest struct {
	GroupUuid *string            `json:"group_uuid,omitempty"`
	TraceUuid *string            `json:"trace_uuid,omitempty"`
	Message   string             `json:"message"`
	Component string             `json:"component"`
	Priority  string             `json:"priority"`
	Payload   *map[string]string `json:"payload,omitempty"`
}

// NewSendEventRequest instantiates a new SendEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendEventRequest(message string, component string, priority string) *SendEventRequest {
	this := SendEventRequest{}
	this.Message = message
	this.Component = component
	this.Priority = priority
	return &this
}

// NewSendEventRequestWithDefaults instantiates a new SendEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendEventRequestWithDefaults() *SendEventRequest {
	this := SendEventRequest{}
	return &this
}

// GetGroupUuid returns the GroupUuid field value if set, zero value otherwise.
func (o *SendEventRequest) GetGroupUuid() string {
	if o == nil || IsNil(o.GroupUuid) {
		var ret string
		return ret
	}
	return *o.GroupUuid
}

// GetGroupUuidOk returns a tuple with the GroupUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEventRequest) GetGroupUuidOk() (*string, bool) {
	if o == nil || IsNil(o.GroupUuid) {
		return nil, false
	}
	return o.GroupUuid, true
}

// HasGroupUuid returns a boolean if a field has been set.
func (o *SendEventRequest) HasGroupUuid() bool {
	if o != nil && !IsNil(o.GroupUuid) {
		return true
	}

	return false
}

// SetGroupUuid gets a reference to the given string and assigns it to the GroupUuid field.
func (o *SendEventRequest) SetGroupUuid(v string) {
	o.GroupUuid = &v
}

// GetTraceUuid returns the TraceUuid field value if set, zero value otherwise.
func (o *SendEventRequest) GetTraceUuid() string {
	if o == nil || IsNil(o.TraceUuid) {
		var ret string
		return ret
	}
	return *o.TraceUuid
}

// GetTraceUuidOk returns a tuple with the TraceUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEventRequest) GetTraceUuidOk() (*string, bool) {
	if o == nil || IsNil(o.TraceUuid) {
		return nil, false
	}
	return o.TraceUuid, true
}

// HasTraceUuid returns a boolean if a field has been set.
func (o *SendEventRequest) HasTraceUuid() bool {
	if o != nil && !IsNil(o.TraceUuid) {
		return true
	}

	return false
}

// SetTraceUuid gets a reference to the given string and assigns it to the TraceUuid field.
func (o *SendEventRequest) SetTraceUuid(v string) {
	o.TraceUuid = &v
}

// GetMessage returns the Message field value
func (o *SendEventRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *SendEventRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *SendEventRequest) SetMessage(v string) {
	o.Message = v
}

// GetComponent returns the Component field value
func (o *SendEventRequest) GetComponent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Component
}

// GetComponentOk returns a tuple with the Component field value
// and a boolean to check if the value has been set.
func (o *SendEventRequest) GetComponentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Component, true
}

// SetComponent sets field value
func (o *SendEventRequest) SetComponent(v string) {
	o.Component = v
}

// GetPriority returns the Priority field value
func (o *SendEventRequest) GetPriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *SendEventRequest) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *SendEventRequest) SetPriority(v string) {
	o.Priority = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *SendEventRequest) GetPayload() map[string]string {
	if o == nil || IsNil(o.Payload) {
		var ret map[string]string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendEventRequest) GetPayloadOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *SendEventRequest) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]string and assigns it to the Payload field.
func (o *SendEventRequest) SetPayload(v map[string]string) {
	o.Payload = &v
}

func (o SendEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendEventRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupUuid) {
		toSerialize["group_uuid"] = o.GroupUuid
	}
	if !IsNil(o.TraceUuid) {
		toSerialize["trace_uuid"] = o.TraceUuid
	}
	toSerialize["message"] = o.Message
	toSerialize["component"] = o.Component
	toSerialize["priority"] = o.Priority
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	return toSerialize, nil
}

type NullableSendEventRequest struct {
	value *SendEventRequest
	isSet bool
}

func (v NullableSendEventRequest) Get() *SendEventRequest {
	return v.value
}

func (v *NullableSendEventRequest) Set(val *SendEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSendEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSendEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendEventRequest(val *SendEventRequest) *NullableSendEventRequest {
	return &NullableSendEventRequest{value: val, isSet: true}
}

func (v NullableSendEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
