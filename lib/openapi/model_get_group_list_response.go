/*
API

API for traces

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetGroupListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGroupListResponse{}

// GetGroupListResponse struct for GetGroupListResponse
type GetGroupListResponse struct {
	Active []Group `json:"active"`
	Fixed  []Group `json:"fixed"`
}

// NewGetGroupListResponse instantiates a new GetGroupListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGroupListResponse(active []Group, fixed []Group) *GetGroupListResponse {
	this := GetGroupListResponse{}
	this.Active = active
	this.Fixed = fixed
	return &this
}

// NewGetGroupListResponseWithDefaults instantiates a new GetGroupListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGroupListResponseWithDefaults() *GetGroupListResponse {
	this := GetGroupListResponse{}
	return &this
}

// GetActive returns the Active field value
func (o *GetGroupListResponse) GetActive() []Group {
	if o == nil {
		var ret []Group
		return ret
	}

	return o.Active
}

// GetActiveOk returns a tuple with the Active field value
// and a boolean to check if the value has been set.
func (o *GetGroupListResponse) GetActiveOk() ([]Group, bool) {
	if o == nil {
		return nil, false
	}
	return o.Active, true
}

// SetActive sets field value
func (o *GetGroupListResponse) SetActive(v []Group) {
	o.Active = v
}

// GetFixed returns the Fixed field value
func (o *GetGroupListResponse) GetFixed() []Group {
	if o == nil {
		var ret []Group
		return ret
	}

	return o.Fixed
}

// GetFixedOk returns a tuple with the Fixed field value
// and a boolean to check if the value has been set.
func (o *GetGroupListResponse) GetFixedOk() ([]Group, bool) {
	if o == nil {
		return nil, false
	}
	return o.Fixed, true
}

// SetFixed sets field value
func (o *GetGroupListResponse) SetFixed(v []Group) {
	o.Fixed = v
}

func (o GetGroupListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGroupListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active"] = o.Active
	toSerialize["fixed"] = o.Fixed
	return toSerialize, nil
}

type NullableGetGroupListResponse struct {
	value *GetGroupListResponse
	isSet bool
}

func (v NullableGetGroupListResponse) Get() *GetGroupListResponse {
	return v.value
}

func (v *NullableGetGroupListResponse) Set(val *GetGroupListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGroupListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGroupListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGroupListResponse(val *GetGroupListResponse) *NullableGetGroupListResponse {
	return &NullableGetGroupListResponse{value: val, isSet: true}
}

func (v NullableGetGroupListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGroupListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
