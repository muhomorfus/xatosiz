/*
API

API for traces

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the Event type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Event{}

// Event struct for Event
type Event struct {
	Uuid      string            `json:"uuid"`
	TraceUuid string            `json:"trace_uuid"`
	Message   string            `json:"message"`
	Priority  string            `json:"priority"`
	Fixed     bool              `json:"fixed"`
	Time      string            `json:"time"`
	Payload   map[string]string `json:"payload"`
}

// NewEvent instantiates a new Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvent(uuid string, traceUuid string, message string, priority string, fixed bool, time string, payload map[string]string) *Event {
	this := Event{}
	this.Uuid = uuid
	this.TraceUuid = traceUuid
	this.Message = message
	this.Priority = priority
	this.Fixed = fixed
	this.Time = time
	this.Payload = payload
	return &this
}

// NewEventWithDefaults instantiates a new Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventWithDefaults() *Event {
	this := Event{}
	return &this
}

// GetUuid returns the Uuid field value
func (o *Event) GetUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value
// and a boolean to check if the value has been set.
func (o *Event) GetUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uuid, true
}

// SetUuid sets field value
func (o *Event) SetUuid(v string) {
	o.Uuid = v
}

// GetTraceUuid returns the TraceUuid field value
func (o *Event) GetTraceUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TraceUuid
}

// GetTraceUuidOk returns a tuple with the TraceUuid field value
// and a boolean to check if the value has been set.
func (o *Event) GetTraceUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TraceUuid, true
}

// SetTraceUuid sets field value
func (o *Event) SetTraceUuid(v string) {
	o.TraceUuid = v
}

// GetMessage returns the Message field value
func (o *Event) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *Event) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *Event) SetMessage(v string) {
	o.Message = v
}

// GetPriority returns the Priority field value
func (o *Event) GetPriority() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *Event) GetPriorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *Event) SetPriority(v string) {
	o.Priority = v
}

// GetFixed returns the Fixed field value
func (o *Event) GetFixed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Fixed
}

// GetFixedOk returns a tuple with the Fixed field value
// and a boolean to check if the value has been set.
func (o *Event) GetFixedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fixed, true
}

// SetFixed sets field value
func (o *Event) SetFixed(v bool) {
	o.Fixed = v
}

// GetTime returns the Time field value
func (o *Event) GetTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Time
}

// GetTimeOk returns a tuple with the Time field value
// and a boolean to check if the value has been set.
func (o *Event) GetTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Time, true
}

// SetTime sets field value
func (o *Event) SetTime(v string) {
	o.Time = v
}

// GetPayload returns the Payload field value
func (o *Event) GetPayload() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *Event) GetPayloadOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *Event) SetPayload(v map[string]string) {
	o.Payload = v
}

func (o Event) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Event) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uuid"] = o.Uuid
	toSerialize["trace_uuid"] = o.TraceUuid
	toSerialize["message"] = o.Message
	toSerialize["priority"] = o.Priority
	toSerialize["fixed"] = o.Fixed
	toSerialize["time"] = o.Time
	toSerialize["payload"] = o.Payload
	return toSerialize, nil
}

type NullableEvent struct {
	value *Event
	isSet bool
}

func (v NullableEvent) Get() *Event {
	return v.value
}

func (v *NullableEvent) Set(val *Event) {
	v.value = val
	v.isSet = true
}

func (v NullableEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvent(val *Event) *NullableEvent {
	return &NullableEvent{value: val, isSet: true}
}

func (v NullableEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
