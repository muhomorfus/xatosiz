/*
 * API
 *
 * API for traces
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type SendEventRequest struct {
	GroupUuid string `json:"group_uuid,omitempty"`

	TraceUuid string `json:"trace_uuid,omitempty"`

	Message string `json:"message"`

	Component string `json:"component"`

	Priority string `json:"priority"`

	Payload map[string]string `json:"payload,omitempty"`
}

// AssertSendEventRequestRequired checks if the required fields are not zero-ed
func AssertSendEventRequestRequired(obj SendEventRequest) error {
	elements := map[string]interface{}{
		"message":   obj.Message,
		"component": obj.Component,
		"priority":  obj.Priority,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseSendEventRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of SendEventRequest (e.g. [][]SendEventRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSendEventRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSendEventRequest, ok := obj.(SendEventRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSendEventRequestRequired(aSendEventRequest)
	})
}
