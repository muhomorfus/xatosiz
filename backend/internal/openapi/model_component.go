/*
 * API
 *
 * API for traces
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Component struct {
	Name string `json:"name,omitempty"`

	Quantity int32 `json:"quantity"`
}

// AssertComponentRequired checks if the required fields are not zero-ed
func AssertComponentRequired(obj Component) error {
	elements := map[string]interface{}{
		"quantity": obj.Quantity,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseComponentRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Component (e.g. [][]Component), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseComponentRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aComponent, ok := obj.(Component)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertComponentRequired(aComponent)
	})
}
