/*
 * API
 *
 * API for traces
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type GetGroupListResponse struct {
	Active []GroupPreview `json:"active"`

	Fixed []GroupPreview `json:"fixed"`
}

// AssertGetGroupListResponseRequired checks if the required fields are not zero-ed
func AssertGetGroupListResponseRequired(obj GetGroupListResponse) error {
	elements := map[string]interface{}{
		"active": obj.Active,
		"fixed":  obj.Fixed,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Active {
		if err := AssertGroupPreviewRequired(el); err != nil {
			return err
		}
	}
	for _, el := range obj.Fixed {
		if err := AssertGroupPreviewRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGetGroupListResponseRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of GetGroupListResponse (e.g. [][]GetGroupListResponse), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGetGroupListResponseRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGetGroupListResponse, ok := obj.(GetGroupListResponse)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGetGroupListResponseRequired(aGetGroupListResponse)
	})
}
