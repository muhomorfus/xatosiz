/*
 * API
 *
 * API for traces
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// CreateAlertConfig -
func (s *DefaultApiService) CreateAlertConfig(ctx context.Context, body AlertConfig) (ImplResponse, error) {
	// TODO - update CreateAlertConfig with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, AlertConfig{}) or use other options such as http.Ok ...
	//return Response(200, AlertConfig{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateAlertConfig method not implemented")
}

// CreateGroup -
func (s *DefaultApiService) CreateGroup(ctx context.Context) (ImplResponse, error) {
	// TODO - update CreateGroup with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, CreateGroupResponse{}) or use other options such as http.Ok ...
	//return Response(200, CreateGroupResponse{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateGroup method not implemented")
}

// DeleteAlertConfig -
func (s *DefaultApiService) DeleteAlertConfig(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update DeleteAlertConfig with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteAlertConfig method not implemented")
}

// EndTrace -
func (s *DefaultApiService) EndTrace(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update EndTrace with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EndTrace method not implemented")
}

// FixAlert -
func (s *DefaultApiService) FixAlert(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update FixAlert with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("FixAlert method not implemented")
}

// FixEvent -
func (s *DefaultApiService) FixEvent(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update FixEvent with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	//return Response(200, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("FixEvent method not implemented")
}

// GetAlertConfigList -
func (s *DefaultApiService) GetAlertConfigList(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAlertConfigList with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetAlertConfigListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetAlertConfigListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAlertConfigList method not implemented")
}

// GetAlertList -
func (s *DefaultApiService) GetAlertList(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAlertList with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetAlertListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetAlertListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAlertList method not implemented")
}

// GetEvent -
func (s *DefaultApiService) GetEvent(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update GetEvent with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Event{}) or use other options such as http.Ok ...
	//return Response(200, Event{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEvent method not implemented")
}

// GetEventList -
func (s *DefaultApiService) GetEventList(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetEventList with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetEventListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetEventListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetEventList method not implemented")
}

// GetGroup -
func (s *DefaultApiService) GetGroup(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update GetGroup with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Group{}) or use other options such as http.Ok ...
	//return Response(200, Group{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGroup method not implemented")
}

// GetGroupList -
func (s *DefaultApiService) GetGroupList(ctx context.Context, filters Filters) (ImplResponse, error) {
	// TODO - update GetGroupList with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, GetGroupListResponse{}) or use other options such as http.Ok ...
	//return Response(200, GetGroupListResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetGroupList method not implemented")
}

// SendEvent -
func (s *DefaultApiService) SendEvent(ctx context.Context, sendEventRequest SendEventRequest) (ImplResponse, error) {
	// TODO - update SendEvent with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Event{}) or use other options such as http.Ok ...
	//return Response(200, Event{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("SendEvent method not implemented")
}

// StartTrace -
func (s *DefaultApiService) StartTrace(ctx context.Context, startTraceRequest StartTraceRequest) (ImplResponse, error) {
	// TODO - update StartTrace with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, StartTraceResponse{}) or use other options such as http.Ok ...
	//return Response(200, StartTraceResponse{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("StartTrace method not implemented")
}
