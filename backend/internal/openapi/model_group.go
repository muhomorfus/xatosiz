/*
 * API
 *
 * API for traces
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type Group struct {
	Uuid string `json:"uuid"`

	Traces []Trace `json:"traces"`
}

// AssertGroupRequired checks if the required fields are not zero-ed
func AssertGroupRequired(obj Group) error {
	elements := map[string]interface{}{
		"uuid":   obj.Uuid,
		"traces": obj.Traces,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Traces {
		if err := AssertTraceRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseGroupRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Group (e.g. [][]Group), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseGroupRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aGroup, ok := obj.(Group)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertGroupRequired(aGroup)
	})
}
