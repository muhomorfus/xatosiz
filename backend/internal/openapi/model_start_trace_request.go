/*
 * API
 *
 * API for traces
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type StartTraceRequest struct {
	GroupUuid string `json:"group_uuid,omitempty"`

	ParentUuid string `json:"parent_uuid,omitempty"`

	Title string `json:"title"`

	Component string `json:"component"`
}

// AssertStartTraceRequestRequired checks if the required fields are not zero-ed
func AssertStartTraceRequestRequired(obj StartTraceRequest) error {
	elements := map[string]interface{}{
		"title":     obj.Title,
		"component": obj.Component,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseStartTraceRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of StartTraceRequest (e.g. [][]StartTraceRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseStartTraceRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aStartTraceRequest, ok := obj.(StartTraceRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertStartTraceRequestRequired(aStartTraceRequest)
	})
}
